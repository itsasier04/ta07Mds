{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport consumiblesData from \"@/data/consumibles.json\";\nexport default {\n  data() {\n    return {\n      consumibles: JSON.parse(JSON.stringify(consumiblesData.dades_mensuals)),\n      diasEstimados: \"\",\n      consumoEstimadoOficina: null,\n      consumoEstimadoLimpieza: null\n    };\n  },\n  computed: {\n    consumiblesPizarra() {\n      return this.consumibles.filter(item => this.esMaterialPizarra(item.nom));\n    },\n    consumiblesNoPizarra() {\n      return this.consumibles.filter(item => !this.esMaterialPizarra(item.nom));\n    },\n    consumiblesOficina() {\n      return this.consumibles.filter(item => !this.esProductoLimpieza(item.nom));\n    },\n    consumiblesLimpieza() {\n      return this.consumibles.filter(item => this.esProductoLimpieza(item.nom));\n    }\n  },\n  methods: {\n    calcularGastoTotal() {\n      return this.consumibles.reduce((total, item) => total + item.quantitat * item.preu_unitat, 0).toFixed(2);\n    },\n    calcularConsumoAnual(lista) {\n      return (lista.reduce((total, item) => total + item.quantitat * item.preu_unitat, 0) * 12).toFixed(2);\n    },\n    calcularConsumoPeriodo() {\n      if (!this.diasEstimados || this.diasEstimados < 1 || this.diasEstimados > 365) {\n        alert(\"Introduce un número de días válido (1 - 365).\");\n        return;\n      }\n      this.consumoEstimadoOficina = (this.calcularConsumoAnual(this.consumiblesOficina) / 365 * this.diasEstimados).toFixed(2);\n      this.consumoEstimadoLimpieza = (this.calcularConsumoAnual(this.consumiblesLimpieza) / 365 * this.diasEstimados).toFixed(2);\n    },\n    usarPizarraElectronica() {\n      this.consumibles.forEach(item => {\n        if (this.esMaterialPizarra(item.nom)) {\n          item.quantitat = 0;\n        }\n      });\n    },\n    reducirConsumoPapel(index) {\n      if (this.consumibles[index].quantitat > 0) {\n        this.consumibles[index].quantitat -= 1;\n      }\n    },\n    esMaterialPizarra(nombre) {\n      return nombre.toLowerCase().includes(\"marcador\") || nombre.toLowerCase().includes(\"borrador\");\n    },\n    esPapel(nombre) {\n      return nombre.toLowerCase().includes(\"papel\") && !nombre.toLowerCase().includes(\"wc\") && !nombre.toLowerCase().includes(\"secamanos\");\n    },\n    esProductoLimpieza(nombre) {\n      return nombre.toLowerCase().includes(\"jabon\") || nombre.toLowerCase().includes(\"papel wc\") || nombre.toLowerCase().includes(\"secamanos\") || nombre.toLowerCase().includes(\"bolsas basura\");\n    },\n    restablecerValores() {\n      this.consumibles = JSON.parse(JSON.stringify(consumiblesData.dades_mensuals));\n      this.diasEstimados = \"\";\n      this.consumoEstimadoOficina = null;\n      this.consumoEstimadoLimpieza = null;\n    }\n  }\n};","map":{"version":3,"names":["consumiblesData","data","consumibles","JSON","parse","stringify","dades_mensuals","diasEstimados","consumoEstimadoOficina","consumoEstimadoLimpieza","computed","consumiblesPizarra","filter","item","esMaterialPizarra","nom","consumiblesNoPizarra","consumiblesOficina","esProductoLimpieza","consumiblesLimpieza","methods","calcularGastoTotal","reduce","total","quantitat","preu_unitat","toFixed","calcularConsumoAnual","lista","calcularConsumoPeriodo","alert","usarPizarraElectronica","forEach","reducirConsumoPapel","index","nombre","toLowerCase","includes","esPapel","restablecerValores"],"sources":["/home/asier/calculadora-sostenible/src/views/CalculadoraConsumiblesView.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n      <main class=\"content\">\n        <h1>Consumo de Consumibles</h1>\n        <p class=\"gasto-total\"><strong>Gasto mensual en consumibles:</strong> {{ calcularGastoTotal() }} €</p>\n        \n        <div class=\"data-card\">\n          <h2>Estimaciones de Consumo</h2>\n          <p><strong>Consumo Anual (Consumibles de Oficina):</strong> {{ calcularConsumoAnual(consumiblesOficina) }} €</p>\n          <p><strong>Consumo Anual (Productos de Limpieza):</strong> {{ calcularConsumoAnual(consumiblesLimpieza) }} €</p>\n          \n          <input v-model.number=\"diasEstimados\" type=\"number\" placeholder=\"Introduce días\" min=\"1\" :max=\"365\" />\n          <button @click=\"calcularConsumoPeriodo\">Calcular Consumo en Período</button>\n          \n          <p v-if=\"consumoEstimadoOficina !== null\">\n            <strong>Consumo en {{ diasEstimados }} días (Oficina):</strong> {{ consumoEstimadoOficina }} €\n          </p>\n          <p v-if=\"consumoEstimadoLimpieza !== null\">\n            <strong>Consumo en {{ diasEstimados }} días (Limpieza):</strong> {{ consumoEstimadoLimpieza }} €\n          </p>\n        </div>\n  \n        <div class=\"pizarra-section\">\n          <h2>Material de Pizarra</h2>\n          <div class=\"grid-container\">\n            <div class=\"data-card small\" v-for=\"(item, index) in consumiblesPizarra\" :key=\"index\">\n              <h3>{{ item.nom }}</h3>\n              <p><strong>Cantidad Mensual:</strong> {{ item.quantitat }} unidades</p>\n              <p><strong>Precio Unitario:</strong> {{ item.preu_unitat }} €</p>\n              <p><strong>Gasto Mensual:</strong> {{ (item.quantitat * item.preu_unitat).toFixed(2) }} €</p>\n            </div>\n          </div>\n          <button class=\"pizarra-btn\" @click=\"usarPizarraElectronica\">Usar Pizarra Electrónica</button>\n        </div>\n        \n        <div class=\"data-card\" v-for=\"(item, index) in consumiblesNoPizarra\" :key=\"index\">\n          <h3>{{ item.nom }}</h3>\n          <p><strong>Cantidad Mensual:</strong> {{ item.quantitat }} unidades</p>\n          <p><strong>Precio Unitario:</strong> {{ item.preu_unitat }} €</p>\n          <p><strong>Gasto Mensual:</strong> {{ (item.quantitat * item.preu_unitat).toFixed(2) }} €</p>\n          \n          <button v-if=\"esPapel(item.nom)\" @click=\"reducirConsumoPapel(index)\">\n            Reducir Consumo de Papel\n          </button>\n        </div>\n  \n        <button class=\"controls\" @click=\"restablecerValores\">Restablecer Valores</button>\n  \n      </main>\n    </div>\n  </template>\n  \n  <script>\n  import consumiblesData from \"@/data/consumibles.json\";\n  \n  export default {\n    data() {\n      return {\n        consumibles: JSON.parse(JSON.stringify(consumiblesData.dades_mensuals)),\n        diasEstimados: \"\",\n        consumoEstimadoOficina: null,\n        consumoEstimadoLimpieza: null\n      };\n    },\n    computed: {\n      consumiblesPizarra() {\n        return this.consumibles.filter(item => this.esMaterialPizarra(item.nom));\n      },\n      consumiblesNoPizarra() {\n        return this.consumibles.filter(item => !this.esMaterialPizarra(item.nom));\n      },\n      consumiblesOficina() {\n        return this.consumibles.filter(item => !this.esProductoLimpieza(item.nom));\n      },\n      consumiblesLimpieza() {\n        return this.consumibles.filter(item => this.esProductoLimpieza(item.nom));\n      }\n    },\n    methods: {\n      calcularGastoTotal() {\n        return this.consumibles.reduce((total, item) => total + (item.quantitat * item.preu_unitat), 0).toFixed(2);\n      },\n      calcularConsumoAnual(lista) {\n        return (lista.reduce((total, item) => total + (item.quantitat * item.preu_unitat), 0) * 12).toFixed(2);\n      },\n      calcularConsumoPeriodo() {\n        if (!this.diasEstimados || this.diasEstimados < 1 || this.diasEstimados > 365) {\n          alert(\"Introduce un número de días válido (1 - 365).\");\n          return;\n        }\n        this.consumoEstimadoOficina = ((this.calcularConsumoAnual(this.consumiblesOficina) / 365) * this.diasEstimados).toFixed(2);\n        this.consumoEstimadoLimpieza = ((this.calcularConsumoAnual(this.consumiblesLimpieza) / 365) * this.diasEstimados).toFixed(2);\n      },\n      usarPizarraElectronica() {\n        this.consumibles.forEach(item => {\n          if (this.esMaterialPizarra(item.nom)) {\n            item.quantitat = 0;\n          }\n        });\n      },\n      reducirConsumoPapel(index) {\n        if (this.consumibles[index].quantitat > 0) {\n          this.consumibles[index].quantitat -= 1;\n        }\n      },\n      esMaterialPizarra(nombre) {\n        return nombre.toLowerCase().includes(\"marcador\") || nombre.toLowerCase().includes(\"borrador\");\n      },\n      esPapel(nombre) {\n        return nombre.toLowerCase().includes(\"papel\") && !nombre.toLowerCase().includes(\"wc\") && !nombre.toLowerCase().includes(\"secamanos\");\n      },\n      esProductoLimpieza(nombre) {\n        return nombre.toLowerCase().includes(\"jabon\") || nombre.toLowerCase().includes(\"papel wc\") || nombre.toLowerCase().includes(\"secamanos\") || nombre.toLowerCase().includes(\"bolsas basura\");\n      },\n      restablecerValores() {\n        this.consumibles = JSON.parse(JSON.stringify(consumiblesData.dades_mensuals));\n        this.diasEstimados = \"\";\n        this.consumoEstimadoOficina = null;\n        this.consumoEstimadoLimpieza = null;\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n  }\n  \n  .content {\n    width: 90%;\n    max-width: 1000px;\n    text-align: center;\n  }\n  \n  .gasto-total {\n    font-size: 1.4rem;\n    margin-bottom: 20px;\n    color: var(--dark-gray);\n  }\n  \n  .pizarra-section {\n    background: var(--medium-gray);\n    padding: 20px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n  }\n  \n  .grid-container {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 15px;\n    justify-content: center;\n  }\n  \n  .data-card {\n    background: var(--light-gray);\n    padding: 15px;\n    border-radius: 10px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    text-align: left;\n    margin-bottom: 15px;\n    width: 100%;\n  }\n  \n  .data-card.small {\n    width: 30%;\n  }\n  \n  button {\n    background-color: var(--primary-green);\n    color: var(--dark-gray);\n    padding: 10px 15px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background 0.3s;\n    margin-top: 10px;\n  }\n  \n  button:hover {\n    background-color: var(--secondary-green);\n  }\n  \n  .pizarra-btn {\n    margin-top: 15px;\n    background-color: var(--accent-color);\n  }\n  \n  .pizarra-btn:hover {\n    background-color: var(--secondary-green);\n  }\n\n  \n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}