{"ast":null,"code":"import electricidadData from \"@/data/electricidad.json\";\nexport default {\n  data() {\n    return {\n      electricidad: electricidadData.electricidad,\n      incremento: 0,\n      decremento: 0,\n      nuevoIncremento: \"\",\n      nuevoDecremento: \"\",\n      nuevoNumeroPlacas: \"\",\n      placas: electricidadData.electricidad.numero_placas_solares,\n      datosIniciales: JSON.parse(JSON.stringify(electricidadData.electricidad)),\n      diasEstimados: \"\",\n      consumoEstimado: null\n    };\n  },\n  computed: {\n    consumoAnualProyectado() {\n      return this.electricidad.consumo_anual_kwh + this.incremento * 220 - this.decremento * 220;\n    },\n    consumoCursoEscolar() {\n      return (this.consumoAnualProyectado / 365 * 300).toFixed(2);\n    }\n  },\n  methods: {\n    validarIncremento() {\n      if (this.nuevoIncremento < 1 || this.nuevoIncremento > 9998) {\n        this.nuevoIncremento = \"\";\n      }\n    },\n    validarDecremento() {\n      if (this.nuevoDecremento < 1 || this.nuevoDecremento > 9998) {\n        this.nuevoDecremento = \"\";\n      }\n    },\n    validarPlacas() {\n      if (this.nuevoNumeroPlacas < 1 || this.nuevoNumeroPlacas > 200) {\n        this.nuevoNumeroPlacas = \"\";\n      }\n    },\n    incrementarConsumo() {\n      const valor = parseInt(this.nuevoIncremento);\n      if (!isNaN(valor) && valor > 0 && valor < 9999) {\n        this.incremento = valor;\n        this.nuevoIncremento = \"\";\n      } else {\n        alert(\"Por favor, introduce un número válido entre 1 y 9998.\");\n      }\n    },\n    decrementarConsumo() {\n      const valor = parseInt(this.nuevoDecremento);\n      if (!isNaN(valor) && valor > 0 && valor < 9999) {\n        this.decremento = valor;\n        this.nuevoDecremento = \"\";\n      } else {\n        alert(\"Por favor, introduce un número válido entre 1 y 9998.\");\n      }\n    },\n    incrementarPlacas() {\n      const valor = parseInt(this.nuevoNumeroPlacas);\n      if (!isNaN(valor) && valor > 0 && valor <= 200) {\n        this.placas = Math.min(this.placas + valor, 200);\n        this.nuevoNumeroPlacas = \"\";\n      } else {\n        alert(\"El número de placas no puede ser menor que 1 ni mayor que 200.\");\n      }\n    },\n    restablecerDatos() {\n      this.electricidad = JSON.parse(JSON.stringify(this.datosIniciales));\n      this.incremento = 0;\n      this.decremento = 0;\n      this.nuevoIncremento = \"\";\n      this.nuevoDecremento = \"\";\n      this.nuevoNumeroPlacas = \"\";\n      this.placas = this.datosIniciales.numero_placas_solares;\n      this.consumoEstimado = null;\n    },\n    calcularAutoconsumoDiario() {\n      return (this.placas / 136 * this.electricidad.autoconsumo_diario_kwh).toFixed(2);\n    },\n    calcularPorcentajeAutoconsumo() {\n      const consumoTotal = this.consumoAnualProyectado;\n      const autoconsumoTotal = this.calcularAutoconsumoDiario() * 365;\n      return (autoconsumoTotal / consumoTotal * 100).toFixed(2);\n    },\n    calcularConsumoPeriodo() {\n      if (!this.diasEstimados || this.diasEstimados < 1 || this.diasEstimados > 365) {\n        alert(\"Introduce un número de días válido (1 - 365).\");\n        return;\n      }\n      this.consumoEstimado = (this.consumoAnualProyectado / 365 * this.diasEstimados).toFixed(2);\n    }\n  }\n};","map":{"version":3,"names":["electricidadData","data","electricidad","incremento","decremento","nuevoIncremento","nuevoDecremento","nuevoNumeroPlacas","placas","numero_placas_solares","datosIniciales","JSON","parse","stringify","diasEstimados","consumoEstimado","computed","consumoAnualProyectado","consumo_anual_kwh","consumoCursoEscolar","toFixed","methods","validarIncremento","validarDecremento","validarPlacas","incrementarConsumo","valor","parseInt","isNaN","alert","decrementarConsumo","incrementarPlacas","Math","min","restablecerDatos","calcularAutoconsumoDiario","autoconsumo_diario_kwh","calcularPorcentajeAutoconsumo","consumoTotal","autoconsumoTotal","calcularConsumoPeriodo"],"sources":["/home/asier/ta07-Mds/calculadora-sostenible/src/views/CalculadoraElectricitatView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <main class=\"content\">\n      <h1>Consumo de Electricidad</h1>\n      <div class=\"data-card\">\n        <h2>Datos Generales</h2>\n        <p><strong>Número de Placas Solares:</strong> {{ placas }}</p>\n        <p><strong>Consumo Diario (Laboral):</strong> {{ electricidad.consumo_laboral_diario_kwh + incremento - decremento }} kWh</p>\n        <p><strong>Consumo Diario (Fin de Semana):</strong> {{ electricidad.consumo_fin_de_semana_diario_kwh }} kWh</p>\n        <p><strong>Consumo Mensual:</strong> {{ (electricidad.consumo_mensual_kwh + (incremento * 22) - (decremento * 22)) }} kWh</p>\n        <p><strong>Consumo Anual:</strong> {{ consumoAnualProyectado }} kWh</p>\n        <p><strong>Autoconsumo Diario:</strong> {{ calcularAutoconsumoDiario() }} kWh</p>\n        <p><strong>Porcentaje de Autoconsumo:</strong> {{ calcularPorcentajeAutoconsumo() }}%</p>\n      </div>\n      \n      <div class=\"controls\">\n        <input v-model.number=\"nuevoIncremento\" type=\"number\" placeholder=\"Introduce kWh\" min=\"1\" :max=\"9998\" @input=\"validarIncremento\" />\n        <button @click=\"incrementarConsumo\">Incrementar Consumo</button>\n      </div>\n      \n      <div class=\"controls\">\n        <input v-model.number=\"nuevoDecremento\" type=\"number\" placeholder=\"Introduce kWh\" min=\"1\" :max=\"9998\" @input=\"validarDecremento\" />\n        <button @click=\"decrementarConsumo\">Decrementar Consumo</button>\n      </div>\n\n      <div class=\"controls\">\n        <input v-model.number=\"nuevoNumeroPlacas\" type=\"number\" placeholder=\"Introduce número de placas\" min=\"1\" :max=\"200\" @input=\"validarPlacas\" />\n        <button @click=\"incrementarPlacas\">Añadir Placa Solar</button>\n      </div>\n\n      <div class=\"controls\">\n        <button @click=\"restablecerDatos\">Restablecer los datos</button>\n      </div>\n\n      <div class=\"data-card\">\n        <h2>Estimaciones de Consumo</h2>\n        <input v-model.number=\"diasEstimados\" type=\"number\" placeholder=\"Introduce días\" min=\"1\" :max=\"365\" />\n        <button @click=\"calcularConsumoPeriodo\">Calcular Consumo en Período</button>\n        <p v-if=\"consumoEstimado !== null\"><strong>Consumo en {{ diasEstimados }} días:</strong> {{ consumoEstimado }} kWh</p>\n        <p><strong>Consumo Septiembre - Junio:</strong> {{ consumoCursoEscolar }} kWh</p>\n      </div>\n\n    </main>\n  </div>\n</template>\n\n<script>\nimport electricidadData from \"@/data/electricidad.json\";\n\nexport default {\n  data() {\n    return {\n      electricidad: electricidadData.electricidad,\n      incremento: 0,\n      decremento: 0,\n      nuevoIncremento: \"\",\n      nuevoDecremento: \"\",\n      nuevoNumeroPlacas: \"\",\n      placas: electricidadData.electricidad.numero_placas_solares,\n      datosIniciales: JSON.parse(JSON.stringify(electricidadData.electricidad)),\n      diasEstimados: \"\",\n      consumoEstimado: null\n    };\n  },\n  computed: {\n    consumoAnualProyectado() {\n      return this.electricidad.consumo_anual_kwh + (this.incremento * 220) - (this.decremento * 220);\n    },\n    consumoCursoEscolar() {\n      return ((this.consumoAnualProyectado / 365) * 300).toFixed(2);\n    }\n  },\n  methods: {\n    validarIncremento() {\n      if (this.nuevoIncremento < 1 || this.nuevoIncremento > 9998) {\n        this.nuevoIncremento = \"\";\n      }\n    },\n    validarDecremento() {\n      if (this.nuevoDecremento < 1 || this.nuevoDecremento > 9998) {\n        this.nuevoDecremento = \"\";\n      }\n    },\n    validarPlacas() {\n      if (this.nuevoNumeroPlacas < 1 || this.nuevoNumeroPlacas > 200) {\n        this.nuevoNumeroPlacas = \"\";\n      }\n    },\n    incrementarConsumo() {\n      const valor = parseInt(this.nuevoIncremento);\n      if (!isNaN(valor) && valor > 0 && valor < 9999) {\n        this.incremento = valor;\n        this.nuevoIncremento = \"\";\n      } else {\n        alert(\"Por favor, introduce un número válido entre 1 y 9998.\");\n      }\n    },\n    decrementarConsumo() {\n      const valor = parseInt(this.nuevoDecremento);\n      if (!isNaN(valor) && valor > 0 && valor < 9999) {\n        this.decremento = valor;\n        this.nuevoDecremento = \"\";\n      } else {\n        alert(\"Por favor, introduce un número válido entre 1 y 9998.\");\n      }\n    },\n    incrementarPlacas() {\n      const valor = parseInt(this.nuevoNumeroPlacas);\n      if (!isNaN(valor) && valor > 0 && valor <= 200) {\n        this.placas = Math.min(this.placas + valor, 200);\n        this.nuevoNumeroPlacas = \"\";\n      } else {\n        alert(\"El número de placas no puede ser menor que 1 ni mayor que 200.\");\n      }\n    },\n    restablecerDatos() {\n      this.electricidad = JSON.parse(JSON.stringify(this.datosIniciales));\n      this.incremento = 0;\n      this.decremento = 0;\n      this.nuevoIncremento = \"\";\n      this.nuevoDecremento = \"\";\n      this.nuevoNumeroPlacas = \"\";\n      this.placas = this.datosIniciales.numero_placas_solares;\n      this.consumoEstimado = null;\n    },\n    calcularAutoconsumoDiario() {\n      return ((this.placas / 136) * this.electricidad.autoconsumo_diario_kwh).toFixed(2);\n    },\n    calcularPorcentajeAutoconsumo() {\n      const consumoTotal = this.consumoAnualProyectado;\n      const autoconsumoTotal = this.calcularAutoconsumoDiario() * 365;\n      return ((autoconsumoTotal / consumoTotal) * 100).toFixed(2);\n    },\n    calcularConsumoPeriodo() {\n      if (!this.diasEstimados || this.diasEstimados < 1 || this.diasEstimados > 365) {\n        alert(\"Introduce un número de días válido (1 - 365).\");\n        return;\n      }\n      this.consumoEstimado = ((this.consumoAnualProyectado / 365) * this.diasEstimados).toFixed(2);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n}\n\n.content {\n  width: 80%;\n  max-width: 800px;\n  text-align: center;\n}\n\n.data-card {\n  background: var(--light-gray);\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  margin-top: 20px;\n}\n\n.controls {\n  margin-top: 20px;\n  display: flex;\n  gap: 10px;\n  align-items: center;\n}\n\ninput {\n  padding: 10px;\n  border: 1px solid var(--medium-gray);\n  border-radius: 5px;\n  width: 150px;\n}\n\nbutton {\n  background-color: var(--primary-green);\n  color: var(--dark-gray);\n  padding: 10px 15px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s;\n}\n\nbutton:hover {\n  background-color: var(--secondary-green);\n}\n</style>\n"],"mappings":"AA+CA,OAAOA,gBAAe,MAAO,0BAA0B;AAEvD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAEF,gBAAgB,CAACE,YAAY;MAC3CC,UAAU,EAAE,CAAC;MACbC,UAAU,EAAE,CAAC;MACbC,eAAe,EAAE,EAAE;MACnBC,eAAe,EAAE,EAAE;MACnBC,iBAAiB,EAAE,EAAE;MACrBC,MAAM,EAAER,gBAAgB,CAACE,YAAY,CAACO,qBAAqB;MAC3DC,cAAc,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACb,gBAAgB,CAACE,YAAY,CAAC,CAAC;MACzEY,aAAa,EAAE,EAAE;MACjBC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,sBAAsBA,CAAA,EAAG;MACvB,OAAO,IAAI,CAACf,YAAY,CAACgB,iBAAgB,GAAK,IAAI,CAACf,UAAS,GAAI,GAAG,GAAK,IAAI,CAACC,UAAS,GAAI,GAAI;IAChG,CAAC;IACDe,mBAAmBA,CAAA,EAAG;MACpB,OAAO,CAAE,IAAI,CAACF,sBAAqB,GAAI,GAAG,GAAI,GAAG,EAAEG,OAAO,CAAC,CAAC,CAAC;IAC/D;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,iBAAiBA,CAAA,EAAG;MAClB,IAAI,IAAI,CAACjB,eAAc,GAAI,KAAK,IAAI,CAACA,eAAc,GAAI,IAAI,EAAE;QAC3D,IAAI,CAACA,eAAc,GAAI,EAAE;MAC3B;IACF,CAAC;IACDkB,iBAAiBA,CAAA,EAAG;MAClB,IAAI,IAAI,CAACjB,eAAc,GAAI,KAAK,IAAI,CAACA,eAAc,GAAI,IAAI,EAAE;QAC3D,IAAI,CAACA,eAAc,GAAI,EAAE;MAC3B;IACF,CAAC;IACDkB,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAACjB,iBAAgB,GAAI,KAAK,IAAI,CAACA,iBAAgB,GAAI,GAAG,EAAE;QAC9D,IAAI,CAACA,iBAAgB,GAAI,EAAE;MAC7B;IACF,CAAC;IACDkB,kBAAkBA,CAAA,EAAG;MACnB,MAAMC,KAAI,GAAIC,QAAQ,CAAC,IAAI,CAACtB,eAAe,CAAC;MAC5C,IAAI,CAACuB,KAAK,CAACF,KAAK,KAAKA,KAAI,GAAI,KAAKA,KAAI,GAAI,IAAI,EAAE;QAC9C,IAAI,CAACvB,UAAS,GAAIuB,KAAK;QACvB,IAAI,CAACrB,eAAc,GAAI,EAAE;MAC3B,OAAO;QACLwB,KAAK,CAAC,uDAAuD,CAAC;MAChE;IACF,CAAC;IACDC,kBAAkBA,CAAA,EAAG;MACnB,MAAMJ,KAAI,GAAIC,QAAQ,CAAC,IAAI,CAACrB,eAAe,CAAC;MAC5C,IAAI,CAACsB,KAAK,CAACF,KAAK,KAAKA,KAAI,GAAI,KAAKA,KAAI,GAAI,IAAI,EAAE;QAC9C,IAAI,CAACtB,UAAS,GAAIsB,KAAK;QACvB,IAAI,CAACpB,eAAc,GAAI,EAAE;MAC3B,OAAO;QACLuB,KAAK,CAAC,uDAAuD,CAAC;MAChE;IACF,CAAC;IACDE,iBAAiBA,CAAA,EAAG;MAClB,MAAML,KAAI,GAAIC,QAAQ,CAAC,IAAI,CAACpB,iBAAiB,CAAC;MAC9C,IAAI,CAACqB,KAAK,CAACF,KAAK,KAAKA,KAAI,GAAI,KAAKA,KAAI,IAAK,GAAG,EAAE;QAC9C,IAAI,CAAClB,MAAK,GAAIwB,IAAI,CAACC,GAAG,CAAC,IAAI,CAACzB,MAAK,GAAIkB,KAAK,EAAE,GAAG,CAAC;QAChD,IAAI,CAACnB,iBAAgB,GAAI,EAAE;MAC7B,OAAO;QACLsB,KAAK,CAAC,gEAAgE,CAAC;MACzE;IACF,CAAC;IACDK,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAAChC,YAAW,GAAIS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAC,IAAI,CAACH,cAAc,CAAC,CAAC;MACnE,IAAI,CAACP,UAAS,GAAI,CAAC;MACnB,IAAI,CAACC,UAAS,GAAI,CAAC;MACnB,IAAI,CAACC,eAAc,GAAI,EAAE;MACzB,IAAI,CAACC,eAAc,GAAI,EAAE;MACzB,IAAI,CAACC,iBAAgB,GAAI,EAAE;MAC3B,IAAI,CAACC,MAAK,GAAI,IAAI,CAACE,cAAc,CAACD,qBAAqB;MACvD,IAAI,CAACM,eAAc,GAAI,IAAI;IAC7B,CAAC;IACDoB,yBAAyBA,CAAA,EAAG;MAC1B,OAAO,CAAE,IAAI,CAAC3B,MAAK,GAAI,GAAG,GAAI,IAAI,CAACN,YAAY,CAACkC,sBAAsB,EAAEhB,OAAO,CAAC,CAAC,CAAC;IACpF,CAAC;IACDiB,6BAA6BA,CAAA,EAAG;MAC9B,MAAMC,YAAW,GAAI,IAAI,CAACrB,sBAAsB;MAChD,MAAMsB,gBAAe,GAAI,IAAI,CAACJ,yBAAyB,CAAC,IAAI,GAAG;MAC/D,OAAO,CAAEI,gBAAe,GAAID,YAAY,GAAI,GAAG,EAAElB,OAAO,CAAC,CAAC,CAAC;IAC7D,CAAC;IACDoB,sBAAsBA,CAAA,EAAG;MACvB,IAAI,CAAC,IAAI,CAAC1B,aAAY,IAAK,IAAI,CAACA,aAAY,GAAI,KAAK,IAAI,CAACA,aAAY,GAAI,GAAG,EAAE;QAC7Ee,KAAK,CAAC,+CAA+C,CAAC;QACtD;MACF;MACA,IAAI,CAACd,eAAc,GAAI,CAAE,IAAI,CAACE,sBAAqB,GAAI,GAAG,GAAI,IAAI,CAACH,aAAa,EAAEM,OAAO,CAAC,CAAC,CAAC;IAC9F;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}